version: '3.8'

services:
  marketing-post-generator:
    build:
      context: .
      target: production
      args:
        - NODE_ENV=production
    image: marketing-post-generator-mcp:${VERSION:-latest}
    container_name: marketing-post-generator-prod
    ports:
      - "${PORT:-3000}:3000"
    environment:
      - NODE_ENV=production
      - MCP_MODE=remote
      - MCP_PORT=3000
      - POSTGEN_DATA_DIR=/data/.postgen
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - CLAUDE_API_KEY=${CLAUDE_API_KEY}
    volumes:
      - postgen-data:/data/.postgen:rw
      - logs:/app/logs:rw
    healthcheck:
      test: ["CMD", "node", "/app/scripts/health-check.js"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    networks:
      - mcp-network
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    security_opt:
      - no-new-privileges:true
    read_only: true
    user: "1001:1001"  # match non-root user created in Dockerfile
    tmpfs:
      - /tmp:size=100M,noexec,nosuid,nodev
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Optional reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - logs:/var/log/nginx:rw
    depends_on:
      marketing-post-generator:
        condition: service_healthy
    networks:
      - mcp-network
    restart: unless-stopped
    profiles:
      - proxy
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.5'
        reservations:
          memory: 128M
          cpus: '0.25'

  # Monitoring with basic health monitoring
  monitoring:
    image: prom/prometheus:latest
    container_name: monitoring
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus:rw
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=30d'
      - '--web.enable-lifecycle'
    networks:
      - mcp-network
    restart: unless-stopped
    profiles:
      - monitoring
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

volumes:
  postgen-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${DATA_DIR:-./data}/.postgen
  logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${LOGS_DIR:-./logs}
  prometheus-data:
    driver: local

networks:
  mcp-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# Production environment file template
# Create .env.prod with these variables:
# VERSION=1.0.0
# PORT=3000
# LOG_LEVEL=info
# CLAUDE_API_KEY=your_api_key_here
# DATA_DIR=/opt/marketing-post-generator/data
# LOGS_DIR=/opt/marketing-post-generator/logs
